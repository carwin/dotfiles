#+title: Desktop Configuration

This is the primary desktop application configuration.

@todo
This block pulls in all the =:noweb-ref= references to =symlinks= and outputs them all into a =symlinks.sh= file. This block will normally be empty, if only this file is tangled out. The =:noweb-ref= references are stored in different files.

* System Settings
Load system-specific settings from =.emacs.d/per-system-settings.el= and unpack relevant values into blocks so that they can be used in configuration file blocks. These settings are configured in Systems.org.

#+begin_src emacs-lisp
(load-file "~/.emacs.d/per-system-settings.el")
#+end_src

#+begin_src emacs-lisp
(cy/system-settings-get (intern name))
#+end_src

* System

Once =Arch Linux= is installed, a few things need to happen.

I typically set up my Arch system based on https://github.com/smfsh/arch-install.

** Packages

Core packages should be installed via =pacman=. It is assumed that most of the actual _core_ packages like =btrfs-progs= and =linux-headers= have already been installed at this point.

#+begin_src sh
sudo pacman -S \
  emacs \
  tmux \
  vim \
  awesome-terminal-fonts \
  i3-gaps \
  htop \
  wget \
  networkmanager \
  go \
  git \
  nvidia \
  nfs-utils \
  docker \
#+end_src

To make =AUR= package management easier, first install =yay=.

#+begin_src  sh
cd ~;
git clone https://aur.archlinux.org/yay.git
cd yay;
makepkg -si;
cd ../;
rm -rf yay;
#+end_src

Now install AUR packages:

#+begin_src sh
yay -S \
  ack \
  aaxtomp3 \
  adobe-source-han-sans-jp-fonts \
  dunst \
  efibootmgr \
  feh \
  flac \
  gnupg \
  iotop \
  polybar \
  lando \
  libreswan \
  mailcap \
  mdadm \
  mlocate \
  mpd \
  mpv \
  multimarkdown \
  mu \
  ncmpcpp \
  network-manager-applet \
  networkmanager-l2tp \
  networkmanager-libreswan \
  nodejs \
  noto-fonts \
  npm \
  ntfs-3g \
  nvm \
  openssh \
  org-protocol-emacsclient \
  p7zip \
  pass \
  pavucontrol \
  pulseaudio \
  qgis \
  qutebrowser \
  ranger \
  remmina \
  rofi \
  rustup \
  scrot \
  sshfs \
  spotify \
  ttf-mplus \
  tree \
  unrar \
  unzip \
  xorg-server \
  xorg-xdpyinfo \
  xorg-xev \
  xorg-xmodmap \
  xorg-xrdb \
  xrandr \
  zip
#+end_src

* Environment

** Profile

I use a =.profile= file because it's easy to source for my primary shell (=zsh=), works with =bash=, and login managers read it. This covers the absolute basics of my configuration in a lot of instances.

#+begin_src conf :tangle ~/.profile :mkdirp
DIFFPROG='vim'
LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8
LC_COLLATE=C
RANGER_LOAD_DEFAULT_RC=false
EDITOR="emacsclient --alternate-editor=vim -nw"
VISUAL="emacsclient --alternate-editor=vim"
ALTERNATE_EDITOR="emacs -Q"


# 256 Colors if we're using xterm.
[[ "$TERM" == "xterm" ]] && export TERM=xterm-256-color

# Ensure /usr/local/bin is in path.
export PATH="/usr/local/bin:$PATH"

# Ensure /home/<user>/.local/bin is in path, Python likes to use this.
export PATH="$HOME/.local/bin:$PATH"

# Add Ruby gems into path.
if which ruby >/dev/null && which gem >/dev/null; then
  export PATH="$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

# Source Ruby Version Manager (rvm)
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
[[ -s "$HOME/.cache/yay/rvm/src/rvm/scripts/rvm" ]] && source "$HOME/.cache/yay/rvm/src/rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Add Rust crates into path.
if which rustup >/dev/null; then
  PATH="$HOME/.cargo/bin:$PATH"
fi

# Add composer globals into path.
export PATH="$PATH:$HOME/.config/composer/vendor/bin"

# Add cuda stuff into path
export PATH="$PATH:/opt/cuda/bin"

# Source node version manager
[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh
[[ -s /usr/share/nvm/init-nvm.sh ]] && . /usr/share/nvm/init-nvm.sh
# source /usr/share/nvm/init-nvm.sh

# LS_COLORS='no=00;37:fi=00:di=00;33:ln=04;36:pi=40;33:so=01;35:bd=40;33;01:'
LS_COLORS='no=00;37:fi=00:di=00;33:ln=04;36:pi=40;33:so=01;35:bd=40;33;01:'

# Add personal binaries into PATH.
# PATH="$HOME/.local/bin:$PATH"

# Input method stuff
GTK_IM_MODULE=ibus
XMODIFIERS=@im=ibus
QT_IM_MODULE=ibus

# XDG Basedir specification, these for some reason don't go into user-dirs.dirs
XDG_CONFIG_HOME="$HOME/.config"
XDG_DATA_HOME="$HOME/.local/share"
XDG_CACHE_HOME="$HOME/.cache"
ZDOTDIR="$HOME/.zsh"
#+end_src

(when (equal system-name "PUNCHY"))

#+begin_src sh :noweb-ref environment-post-tangle
# source ~/.profile

#+end_src

** XDG User Directories

XDG user directories define the paths for "well-known" directories.

These values can be queried while scripting using ~xdg-user-dir <var name>~ like so: ~xdg-user-dir DOWNLOAD~. That would output ~/home/<user>/Downloads~ using my configuration.

- =XDG_DESKTOP_DIR=: Desktop files. I don't actually use this but it seems like it's a basic necessity for certain things like =wine= applications.
- =XDG_DOWNLOAD_DIR=: The basic download directory for browsers and other applications.
- =XDG_TEMPLATES_DIR=: Another mostly unused value. The purpose of this directory is to house file templates so you can right click and add a specific type of file somewhere using a GUI file browser like =Thunar=.
- =XDG_PUBLICSHARE_DIR=: Pretty obvious. This is for files that should be public on the network. I don't think I've ever put something here.
- =XDG_DOCUMENTS_DIR=: User document storage. I typically symlink my OneDrive documents folder here.
- =XDG_MUSIC_DIR=: Where tunez come from.
- =XDG_PICTURES_DIR=: Photo storage. This one is another typical symlink to OneDrive.
- =XDG_VIDEOS_DIR=: Video storage.

#+begin_src conf :tangle ~/.config/user-dirs.dirs :mkdirp
XDG_DESKTOP_DIR="$HOME/"
XDG_DOWNLOAD_DIR="$HOME/Downloads"
XDG_TEMPLATES_DIR="$HOME/Templates"
XDG_PUBLICSHARE_DIR="$HOME/Public"
XDG_DOCUMENTS_DIR="$HOME/Documents"
XDG_MUSIC_DIR="$HOME/Audio/Music"
XDG_PICTURES_DIR="$HOME/Pictures"
XDG_VIDEOS_DIR="$HOME/Videos"
#+end_src

After this file is changed, user-dirs need to be updated via: ~xdg-user-dirs-update~.

#+begin_src sh :noweb-ref environment-post-tangle
xdg-user-dirs-update
#+end_src

** Shell

This is where shells are configured. I primarily use =zsh= but I've also used specific configs for =bash= and =fish= before.

**** ZSH

There's not much to say here. The primarily interesting thing here is the sourcing of =~/.profile= at the top.

#+begin_src conf :tangle ~/.zshrc :mkdirp yes
source ~/.profile
source ${ZDOTDIR:-$HOME}/prompt

setopt AUTO_CD # Don't make me use `cd`. You know what I wanted.
setopt NO_CASE_GLOB # Case insensitive globbing.

# Save history
HISTFILE=${ZDOTDIR:-$HOME}/.zhistory
setopt EXTENDED_HISTORY # timestamp history lines
SAVEHIST=5000
HISTSIZE=2000
setopt SHARE_HISTORY # share history across sessions
setopt APPEND_HISTORY # just keep adding to history
setopt INC_APPEND_HISTORY # write all the time, don't wait for shell to close
setopt HIST_IGNORE_DUPS # do not store duplicates
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_EXPIRE_DUPS_FIRST # expire duplicates first
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS # ignore duplicates when searching
setopt HIST_REDUCE_BLANKS # remove blank lines from history
setopt HIST_VERIFY # be really sure when using !!

# Correction
setopt CORRECT
setopt CORRECT_ALL # Correct when using AUTO_CD

# Autocompletion
autoload -Uz compinit && compinit

# Fragment completion.
# zstyle ':completion:*' list-suffixes zstyle ':completion:*' expand prefix suffix

# Tab completion
# setopt MENU_COMPLETE
# zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' # Autocomplete, case insensitive
# zstyle ':completion:*' menu select  # Highlight on tab

# Color dirs
export LS_COLORS # I don't know why this is necessary here, but colors don't work without it.
# zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}


zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'


alias ls='ls --color=auto'
alias 7zultra='7z a -t7z -m0=lzma2 -mx=0 -mfb=64 -md=32m -ms=on'
alias curlheaders='curl -I'
alias curlheadersproxy='curl --socks5 localhost:11080 -I'
alias scrot='scrot -s ~/foo.png && xclip -selection clipboard -t image/png ~/foo.png && rm ~/foo.png'
alias webcam='mplayer tv:// -tv driver=v412:width=1920:height=1080:device=/dev/video0 -fps 15 -vf screenshot'
alias dots='cd ~/Projects/home/dotfiles'
alias work='cd ~/Projects/work'
alias notes='cd ~/Notes'
alias docs='cd ~/Documents'
alias em='emacsclient'
alias emc='emacsclient -c &'
#alias startwin='sudo virsh -c qemu:///system start win10'
#alias stopwin='sudo virsh -c qemu:///system shutdown win10'


export GPG_TTY=$(tty)

# System dependent variables:
if [[ "$(< /proc/sys/kernel/osrelease)" == *microsoft* ]]; then
    export $(dbus-launch)
    export LIBGL_ALWAYS_INDIRECT=1
    export WSL_VERSION=$(wsl.exe -l -v | grep -a '[*]' | sed 's/[^0-9]*//g')
    export WSL_HOST=$(tail -1 /etc/resolv.conf | cut -d' ' -f2)
    export DISPLAY=$(ipconfig.exe | grep IPv4 | head -1 | rev | awk '{print $1}' | rev | tr -d '\r'):0.0

    # Handle pinentry for gpg password prompting in various scenarios.
    # In Ubuntu-20.04 WSL2, I've essentially given up on getting pinentry
    # in Emacs directly, opting instead for the pinentry-gtk2 package.
    kill -0 $SSH_AGENT_PID &> /dev/null
    if [[ $? -eq 1 ]]; then
        eval $( gpg-agent \
            --daemon \
            --allow-emacs-pinentry \
            --allow-loopback-pinentry \
            --enable-ssh-support);
    fi

    # Start Docker daemon when logging in if not runnint
    RUNNING=`ps aux | grep dockerd | grep -v grep`
    if [ -z "$RUNNING" ]; then
        sudo dockerd > /dev/null 2>&1 &
        disown
    fi
fi
#+end_src

My custom prompt for =zsh=.

#+begin_src conf :tangle ~/.zsh/prompt :mkdirp yes
# Left prompt
export PS1="%F{223}%n%F{224}@%F{211}%m %F{179}%~%b%F{255} › "

# Right prompt
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
RPROMPT=\$vcs_info_msg_0_
zstyle ':vcs_info:git:*' formats '%F{223}%b|%F{211}%r%f'
zstyle ':vcs_info:*' enable git

#+end_src

** Xorg

Until =Wayland= stops being terrible with the =nvidia= drivers, I'll continue using =X=.

*** Xresources

This file handles a variety of things, from shell colors to terminal emulator settings.

#+begin_src conf :tangle ~/.Xresources :mkdirp yes
!emacs*Background: DarkSlateGray
!emacs*Foreground: Wheat
!emacs*pointerColor: Orchid
!emacs*cursorColor: Orchid
!emacs*bitmapIcon: on
!emacs*font: fixed
!emacs.geometry: 80x25
Xcursor.size: 18

! ------------------------------------------------------------------------------
! Colour Configuration
! ------------------------------------------------------------------------------

! special
,*.foreground:   #d8dee8
!*.background:   #2f343f
,*.background: #080808
,*.cursorColor:  #b48ead

! black
,*.color0  : #4b5262
,*.color8  : #434a5a

! red
,*.color  : #bf616a
,*.color9  : #b3555e

! green
,*.color2  : #a3be8c
,*.color10 : #93ae7c

! yellow
,*.color3  : #ebcb8b
,*.color11 : #dbbb7b

! blue
,*.color4  : #81a1c1
,*.color12 : #7191b1

! magenta
,*.color5  : #b48ead
,*.color13 : #a6809f

! cyan
,*.color6  : #89d0bA
,*.color14 : #7dbba8

! white
,*.color7  : #e5e9f0
,*.color15 : #d1d5dc

! ------------------------------------------------------------------------------
! Font configuration
! ------------------------------------------------------------------------------

URxvt*font:    xft:M+ 1mn:regular:size=10
URxvt*boldFont:   xft:M+ 1mn:bold:size=10
URxvt*italicFont:  xft:M+ 1mn:italic:size=10
URxvt*boldItalicFont: xft:M+ 1mn:bold italic:size=10

! ------------------------------------------------------------------------------
! Xft Font Configuration
! ------------------------------------------------------------------------------

Xft.autohint: 0
Xft.lcdfilter: lcddefault
Xft.hintstyle: hintslight
Xft.hinting: 1
Xft.antialias: 1
Xft.rgba: rgb
Xft.dpi: 109

! ------------------------------------------------------------------------------
! URxvt configs
! ------------------------------------------------------------------------------

! font spacing
URxvt*letterSpace:  0
URxvt.lineSpace:  0

! general settings
URxvt*saveline:   15000
URxvt*termName:   rxvt-256color
URxvt*iso14755:   false
URxvt*urgentOnBell:  true
URxvt.inmputMethod: ibus
URxvt.preeditType: OverTheSpot

! appearance
URxvt*depth:   32
URxvt*scrollBar:  false
URxvt*scrollBar_right: false
URxvt*internalBorder: 24
URxvt*externalBorder: 0
URxvt.geometry:   84x22
URxvt*transparent: true
URxvt*shading: 25

! perl extensions
URxvt.perl-ext-common: default,clipboard,url-select,keyboard-select,selection-clipboard,matcher

! macros for clipboard and selection
URxvt.copyCommand:  xclip -i -selection clipboard
URxvt.pasteCommand:  xclip -o -selection clipboard
URxvt.keysym.M-c:  perl:clipboard:copy
URxvt.keysym.M-v:  perl:clipboard:paste
URxvt.keysym.M-C-v:  perl:clipboard:paste_escaped
URxvt.keysym.M-Escape: perl:keyboard-select:activate
URxvt.keysym.M-s:  perl:keyboard-select:search
URxvt.keysym.M-u:  perl:url-select:select_next
URxvt.url-launcher:  firefox
URxvt.underlineURLs: true
URxvt*matcher.button: 1
URxvt.urlButton: 1
URxvt.underlineColor: #bf616a

! scroll one line
URxvt.keysym.Shift-Up:  command:\033]720;1\007
URxvt.keysym.Shift-Down: command:\033]721;1\007

! control arrow
URxvt.keysym.Control-Up: \033[1;5A
URxvt.keysym.Control-Down: \033[1;5B
URxvt.keysym.Control-Right: \033[1;5C
URxvt.keysym.Control-Left: \033[1;5D

! Copy/Pasta
URxvt.keysym.Shift-Control-V: eval:paste_clipboard
URxvt.keysym.Shift-Control-C: eval:selection_to_clipboard

! ------------------------------------------------------------------------------
! Rofi configs
! ------------------------------------------------------------------------------

rofi.color-enabled: true
rofi.color-window: #2e3440, #2e3440, #2e3440
rofi.color-normal: #2e3440, #d8dee9, #2e3440, #2e3440, #bf616a
rofi.color-active: #2e3440, #b48ead, #2e3440, #2e3440, #93e5cc
rofi.color-urgent: #2e3440, #ebcb8b, #2e3440, #2e3440, #ebcb8b
rofi.modi: run,drun,window,ssh

! ------------------------------------------------------------------------------
! Dmenu configs
! ------------------------------------------------------------------------------

dmenu.selforeground: #d8dee9
dmenu.background:    #2e3440
dmenu.selbackground: #bf616a
dmenu.foreground:    #d8dee9
#+end_src

After changing this file, it is necessary to reload it via: ~xrdb ~/.Xresources~

*** xsettingsd

=xsettingsd= acts as a minimal settings daemon for =Xorg= applications. It replaces similar daemons from desktop environments like =GNOME= and =XFCE= and enables the usage of a simple configuration file:

#+begin_src conf :tangle ~/.config/xsettingsd/xsettingsd.conf :mkdirp yes :noweb yes
Xft/Antialias 1
Xft/Hinting 1
Xft/HintStyle "hintslight"
Xft/RGBA "rgb"
#+end_src

** Git

Writes out my global =git= configuration.

#+begin_src shell :tangle ~/.gitconfig :mkdirp yes
[core]
  editor = vim
[user]
  name = Carwin Young
  email = cy@carw.in
  signingkey = D6FA5A05B721CCDE
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  frag = cyan bold
  meta = yellow bold
  new = green bold
  old = red bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[merge]
  log = true
[rebase]
  stat = true
[log]
  decorate = full
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com"]
  insteadOf = "gist:"
[url "git@heroku.com:"]
  insteadOf = "heroku:"
[alias]
  br = branch
  st = status
  co = checkout
  df = diff
  g  = grep -I
  rc = rank-contributors
  pr = pull --rebase
  lgp = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  lg = log --show-signature
  cm = commit -S -m
  change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch -f --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f"
#+end_src

** Window Manager

*** i3

#+begin_src conf :tangle ~/.config/i3/config :mkdirp yes
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
set $mod Mod1
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id nm-applet
# Common app binds
bindsym Print exec scrot
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
# Keybindings to control MPD
bindsym XF86AudioPlay exec "mpc toggle"
bindsym XF86AudioStop exec "mpc stop"
bindsym XF86AudioNext exec "mpc next"

exec xautolock -time 10 -locker "i3lock -i ~/Pictures/Wallpaper/pp0vfkij80y31.png"
bindsym XF86ScreenSaver exec "i3lock -i ~/Pictures/Wallpaper/pp0vfkij80y31.png"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
# kill focused window
bindsym $mod+Shift+q kill
# start dmenu (a program launcher)
# bindsym $mod+d exec ~/Scripts/rofia.sh
bindsym $mod+d exec ~/.config/rofi/rofia.sh
# bindsym $mod+space exec rofi -show combi -modi combi -font "Open Sans 14" -lines 10 -matching fuzzy daemon

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# split in horizontal orientation
bindsym $mod+apostrophe split h
# split in vertical orientation
bindsym $mod+minus split v
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
# focus the parent container
bindsym $mod+a focus parent
# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
set $prim "1: I"
set $ws2 "2: II"
set $ws3 "3: III"
set $ws4 "4: IV"
set $ws5 "5: V"
set $ws6 "6: VI"
set $ws7 "7: VII"
set $ws8 "8: VIII"
set $ws9 "9: IX"
set $ws10 "10: X"
set $comm "comm."
set $net "internet"
set $game "game"
set $mail "mail"

# Switch to workspace
bindsym $mod+1 workspace $prim
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+c workspace $comm
bindsym $mod+n workspace $net
bindsym $mod+g workspace $game
bindsym $mod+m workspace $mail
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $prim
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+c move container to workspace $comm
bindsym $mod+Shift+n move container to workspace $net
bindsym $mod+Shift+g move container to workspace $game
bindsym $mod+Shift+m move container to workspace $mail
# reload the configuration file
bindsym $mod+Shift+Control+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         colors {
#         background #2f343f
#         statusline #2f343f
#         separator #4b5262
#         # colour of border, background, and text
#         focused_workspace       #2f343f #bf616a #d8dee8
#         active_workspace        #2f343f #2f343f #d8dee8
#         inactive_workspace      #2f343f #2f343f #d8dee8
#         urgent_workspacei       #2f343f #ebcb8b #2f343f
#     }
#         status_command i3status
# }
# window rules, you can find the window class using xprop
for_window [class=".*"] border pixel 1
for_window [class=feh|Pavucontrol|Screenshot] floating enable
for_window [class=zoom title="^Participants"] floating enable
for_window [class=zoom title="^Zoom Meeting"] floating enable
for_window [class=zoom title="^Zoom - Licensed Account"] floating enable
for_window [class=firefox] move --no-auto-back-and-forth container to workspace $net
for_window [class=Google-chrome window_role=browser] move container to workspace $net
for_window [class=Google-chrome window_role=pop-up] move container to workspace $comm
for_window [class=Signal] move container to workspace $comm
for_window [class=Emacs] move container to workspace $prim
for_window [class=Gnome-screenshot] floating enable
# Autostart applications and other things
exec --no-startup-id ~/.fehbg &
exec --no-startup-id xmodmap ~/.Xmodmap
# exec --no-startup-id xsettingsd &
# exec --no-startup-id ~/.screenlayout/home_triple.sh &
exec --no-startup-id dunst &
exec --no-startup-id picom -b
exec --no-startup-id ~/.config/polybar/launchbars.sh
exec --no-startup-id ibus-daemon -drxR
# colour of border, background, text, indicator, and child_border
client.focused              #bf616a #2f343f #d8dee8 #bf616a #ff91a4
client.focused_inactive     #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.unfocused            #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.urgent               #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.placeholder          #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.background           #2f343f

gaps inner 10
gaps outer 0
gaps horizontal 0
gaps vertical 25
#+end_src

*** i3status

#+begin_src conf :tangle ~/.config/i3status/config :mkdirp yes
general {
        output_format = "i3bar"
        colors = false
        markup = pango
        interval = 5
        color_good = '#2f343f'
    color_degraded = '#ebcb8b'
    color_bad = '#ba5e57'
}

order += "load"
order += "cpu_temperature 0"
order += "disk /"
order += "disk /home"
order += "ethernet eno1"
# order += "wireless wlp5s0"
order += "volume master"
# order += "battery 1"
order += "tztime local"

load {
        format = "<span background='#f59335'>  %5min Load </span>"
}

cpu_temperature 0 {
        format = "<span background='#bf616a'>  %degrees °C </span>"
        path = "/sys/class/thermal/thermal_zone0/temp"
}

disk "/" {
        format = "<span background='#fec7cd'>  %free Free </span>"
}

disk "/home" {
        format = "<span background='#a1d569'>  %free Free </span>"
}

ethernet eno1 {
        format_up = "<span background='#88c0d0'>  %ip </span>"
        format_down = "<span background='#88c0d0'>  Disconnected </span>"
}

wireless wlp5s0 {
        format_up = "<span background='#b48ead'>  %essid </span>"
        format_down = "<span background='#b48ead'>  Disconnected </span>"
}

volume master {
        format = "<span background='#ebcb8b'>  %volume </span>"
        format_muted = "<span background='#ebcb8b'>  Muted </span>"
        device = "default"
        mixer = "Master"
        mixer_idx = 0
}

battery 1 {
  last_full_capacity = true
        format = "<span background='#a3be8c'>  %status %percentage </span>"
        format_down = "No Battery"
        status_chr = "Charging"
        status_bat = "Battery"
        status_unk = "Unknown"
        status_full = "Charged"
        path = "/sys/class/power_supply/BAT%d/uevent"
        low_threshold = 10
}

tztime local {
    format = "<span background='#81a1c1'> %time </span>"
    format_time = " %a %-d %b %H:%M"
}
general {
        output_format = "i3bar"
        colors = false
        markup = pango
        interval = 5
        color_good = '#2f343f'
    color_degraded = '#ebcb8b'
    color_bad = '#ba5e57'
}

#+end_src

*** Polybar
#+begin_src sh :tangle ~/.config/polybar/launchbars.sh :mkdirp yes :tangle-mode (identity #o755)
#!/bin/sh

killall polybar

if type "xrandr"; then
  for m in $(xrandr --query | grep " connected" | cut -d" " -f1); do
      MONITOR=$m polybar topbar -c ~/.config/polybar/topbar.conf &
      MONITOR=$m polybar bottombar -c ~/.config/polybar/bottombar.conf &
  done
else
    polybar topbar -c ~/.config/polybar/topbar.conf &
    polybar bottombar -c ~/.config/polybar/bottombar.conf &
fi
#+end_src

**** Bottom bar
#+begin_src conf :tangle ~/.config/polybar/bottombar.conf :mkdirp yes
[bar/bottombar]
monitor = ${env:MONITOR:DP-2}
monitor_fallback = ${env:MONITOR:LVDS-1}
width = 100%
height = 25
bottom = true

; background = #00000000
background = #88000000
foreground = #88FFFFFF

font-0 = Open Sans:pixelsize=10;1
font-1 = FontAwesome:pixelsize=10;1

separator = "  "
modules-left =
modules-center = battery temperature cpu memory volume wireless-network
modules-right =

tray-position = right
tray-padding = 0

override-redirect = true
wm-restack = i3

[module/volume]
type = internal/alsa

format-volume = <ramp-volume> <label-volume>
;label-volume = VOL
label-volume-foreground = #d7d7d7

format-muted-prefix = " "
format-muted-foreground = #f0f0f0
;label-muted = muted

bar-volume-width = 10
bar-volume-foreground-0 = #55aa55
bar-volume-foreground-1 = #55aa55
bar-volume-foreground-2 = #55aa55
bar-volume-foreground-3 = #55aa55
bar-volume-foreground-4 = #55aa55
bar-volume-foreground-5 = #f5a70a
bar-volume-foreground-6 = #ff5555
bar-volume-gradient = false
bar-volume-indicator = |
bar-volume-indicator-font = 2
bar-volume-fill = ─
bar-volume-fill-font = 2
bar-volume-empty = ─
bar-volume-empty-font = 2
bar-volume-empty-foreground = #ff8f8f

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 

[module/eth]
type = internal/network
interface = enp0s25
interval = 3.0

format-connected-underline = #55aa55
format-connected-prefix = " "
format-connected-prefix-foreground = ${colors.foreground-alt}
label-connected = %local_ip%

format-disconnected =
;format-disconnected = <label-disconnected>
;format-disconnected-underline = ${self.format-connected-underline}
;label-disconnected = %ifname% disconnected
;label-disconnected-foreground = ${colors.foreground-alt}

[module/wlan]
type = internal/network
interface = wlp2s0
interval = 3.0

format-connected = <ramp-signal> <label-connected>
format-connected-underline = #9f78e1
label-connected =   %essid%

format-disconnected =
;format-disconnected = <label-disconnected>
;format-disconnected-underline = ${self.format-connected-underline}
;label-disconnected = %ifname% disconnected
;label-disconnected-foreground = ${colors.foreground-alt}

; ramp-signal-0 = 
; ramp-signal-1 = 
; ramp-signal-2 = 
; ramp-signal-3 = 
; ramp-signal-4 = 
; ramp-signal-foreground = #ef0aeb

;[module/alsa]
;type = internal/alsa
;master-soundcard = default
;speaker-soundcard = default

;headphone-soundcard = default

;master-mixer = Master
;interval = 5

;format-volume = <label-volume>
;label-volume = VOLUME %percentage%%

[module/wireless-network]
type = internal/network
;interface = enp4s0
interface = wlp2s0
interval = 1.0
ping-interval = 10

format-connected = <ramp-signal> <label-connected>
label-connected = %local_ip%    %downspeed%    %upspeed%
label-disconnected =    not connected
label-disconnected-foreground = #66

ramp-signal-0 = 
ramp-signal-1 = 
ramp-signal-2 = 
ramp-signal-3 = 
ramp-signal-4 = 

animation-packetloss-0 = 
animation-packetloss-0-foreground = #ffa64c
animation-packetloss-1 = 
animation-packetloss-1-foreground = ${bar/top.foreground}
animation-packetloss-framerate = 500

[module/memory]
type = internal/memory
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
format-underline = #4bffdc
label = %percentage_used%%

[module/cpu]
type = internal/cpu
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
format-underline = #f90000
label = %percentage%%

[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60

format = <ramp> <label>
format-underline = #f50a4d
format-warn = <ramp> <label-warn>
format-warn-underline = ${self.format-underline}

label = %temperature%
label-warn = %temperature%
label-warn-foreground = ${colors.secondary}

ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-foreground = ${colors.foreground-alt}

;[module/temperature]
;type = internal/temperature
;interval = 0.5
;thermal-zone = 0
;warn-temperature = 60
;label = TEMPERATURE %temperature-c%
;label-padding = 10

;[module/battery]
;type = internal/battery
;battery = BAT0
;adapter = ADP1
;poll-interval = 5
;label = BATTERY %percentage%
;
;format-charging = <label-charging>
;
;format-discharging = <label-discharging>
;label-charging = CHARGING %percentage%%
;label-discharging = BATTERY %percentage%%
;label-full = BATTERY FULL

[module/battery]
type = internal/battery
battery = BAT0
adapter = AC
full-at = 96

time-format = %k:%M

label-discharging = %percentage%% %time%
label-charging = %percentage%% %time%

format-charging = <animation-charging> <label-charging>
format-charging-underline = #ffb52a

format-discharging = <ramp-capacity> <label-discharging>
format-discharging-underline = ${self.format-charging-underline}

format-full-prefix = " "
format-full-prefix-foreground = ${colors.foreground-alt}
format-full-underline = ${self.format-charging-underline}

ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
ramp-capacity-foreground = ${colors.foreground-alt}

animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-foreground = ${colors.foreground-alt}
animation-charging-framerate = 750
#+end_src

**** Top bar
#+begin_src conf :tangle ~/.config/polybar/topbar.conf :mkdirp yes
[bar/topbar]
monitor = ${env:MONITOR:DP-2}
monitor_fallback = ${env:MONITOR:LVDS-1}
width = 100%
height = 25
offset-x = 0
offset-y = 0
padding-right = 7
padding-left = 7
; AARRGGBB
background = #88000000
foreground = #88FFFFFF

font-0 = Open Sans:pixelsize=10;1
font-1 = FontAwesome:pixelsize=10;1

separator = "        "
modules-left =
modules-center = i3 date
modules-right =

override-redirect = true
wm-restack = i3

scroll-up = i3wm-wsnext
scroll-down = i3wm-wsprev

[module/i3]
type = internal/i3
format = <label-state> <label-mode>
index-sort = true
wrapping-scroll = true
strip-wsnumbers = true
pin-workspaces = true

label-mode-padding = 5

label-unfocused-foreground = #33FFFFFF
label-unfocused-padding = 1
label-visible-foregroud = #AAFFFFFF
label-visible-padding = 1
label-focused-foreground = #AAFFFFFF
label-focused-padding = 1
label-urgent-padding = 1

[module/date]
type = internal/date
interval = 5

date = "%Y-%m-%d"
time = " %H:%M"

label = %date% %time%
#+end_src

** System Post-tangle
#+begin_src sh :noweb yes :mkdirp yes :tangle ~/Projects/Home/dotfiles/tangled/environment-post-tangle.sh :shebang "#!/bin/bash" :tangle-mode (identity #o755)
<<xorg-post-tangle>>
<<i3-post-tangle>>
#+end_src

* Applications

** Tmux

#+description: @todo I think tmux now supports using XDG_CONFIG_HOME so it can be stored in ~/.config/tmux/.

#+begin_src conf :tangle ~/.tmux.conf

# Key bindings
# ------------------------------------------------------------------------------
# Unbind the default Prefix
unbind C-b
# Bind <C-a> as the new Prefix
set -g prefix C-a
# Send the prefix when used with prefix+a for nested sessions
bind C-a send-prefix
# Split windows horizontally with |
bind | split-window -h
# Split windows vertically with -
bind - split-window -v
# Reload configuration with 'r'
unbind r
bind r source-file ~/.tmux.conf
# Move around panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# Resize panes with HJKL
bind-key H resize-pane -L 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key L resize-pane -R 5
# Vim keystrokes for select and copy (yank) to clipboard.
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# General Settings
# ------------------------------------------------------------------------------
# Be colorful
set -g default-terminal "screen-256color"

# Enable the mouse
set-option -g mouse on

# Set the base index to 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Use Vi mode
set -g status-keys vi
setw -g mode-keys vi
set-window-option -g mode-keys vi

# No delay for escape key press.
set -sg escape-time 0
# Set delay for repeat key press.
set -sg repeat-time 600


# THEME
set -g status-bg colour236
set -g status-fg white
set -g status-justify centre
set-window-option -g window-status-current-style bg=colour167,fg=colour236,bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-right '#[fg=yellow]#(curl "wttr.in/?format=3")#[default] #[fg=white]%H:%M#[default]'

#+end_src

** Dunst

Dunst is the notification system I use.

#+begin_src conf :tangle ~/.config/dunst/dunstrc :mkdirp yes
[global]
monitor = 0
follow = mouse
geometry = "250x50-24+24"
indicate_hidden = yes
shrink = no
separator_height = 0
padding = 16
horizontal_padding = 24
frame_width = 2
sort = no
idle_threshold = 120
font = M+ 1p 8
line_height = 4
markup = full
format = "<b>%s</b>\n%b"
alignment = left
show_age_threshold = 60
word_wrap = yes
ignore_newline = no
stack_duplicates = false
hide_duplicate_count = yes
show_indicators = no
icon_position = off
sticky_history = yes
history_length = 20
browser = /usr/bin/firefox -new-tab
always_run_script = true
title = Dunst
class = Dunst

[shortcuts]
close = ctrl+space
close_all = ctrl+shift+space
history = ctrl+grave
context = ctrl+shift+period

[urgency_low]
background = "#2f343f"
foreground = "#d8dee8"
timeout = 2

[urgency_normal]
background = "#2f343f"
foreground = "#d8dee8"
timeout = 4

[urgency_critical]
background = "#2f343f"
foreground = "#d8dee8"
frame_color = "#bf616a"
timeout = 0
#+end_src

** Rofi

#+begin_src conf :tangle ~/.config/rofi/config.rasi :mkdirp yes
configuration {
	theme: "~/.config/rofi/themes/slate.rasi";
}
#+end_src

*** Theme

#+begin_src css :tangle ~/.config/rofi/themes/slate.rasi :mkdirp yes
 * {
  background-color: #282C33;
  border-color: #2e343f;
  text-color: #8ca0aa;
  spacing: 0;
  width: 512px;
}

inputbar {
  border: 0 0 1px 0;
  children: [prompt,entry];
}

prompt {
  padding: 16px;
  border: 0 1px 0 0;
}

textbox {
  background-color: #2e343f;
  border: 0 0 1px 0;
  border-color: #282C33;
  padding: 8px 16px;
}

entry {
  padding: 16px;
}

listview {
  cycle: false;
  margin: 0 0 -1px 0;
  scrollbar: false;
}

element {
  border: 0 0 1px 0;
  padding: 16px;
}

element selected {
  background-color: #2e343f;
}

#+end_src

*** Launcher script

This is the script that =i3= uses to launch =Rofi= as a =dmenu= replacement.

#+begin_src sh :tangle ~/.config/rofi/rofia.sh :mkdirp yes :shebang "#!/bin/bash" :tangle-mode (identity #o755)
#!/bin/bash
# A messy & pathetic script to launch rofi with xrdb colours
getcolors () {
  FOREGROUND=$(xrdb -query | grep 'foreground:'| awk '{print $NF}')
  BACKGROUND=$(xrdb -query | grep 'background:'| awk '{print $NF}')
  BLACK=$(xrdb -query | grep 'color0:'| awk '{print $NF}')
  RED=$(xrdb -query | grep 'color1:'| awk '{print $NF}')
  GREEN=$(xrdb -query | grep 'color2:'| awk '{print $NF}')
  YELLOW=$(xrdb -query | grep 'color3:'| awk '{print $NF}')
  BLUE=$(xrdb -query | grep 'color4:'| awk '{print $NF}')
  MAGENTA=$(xrdb -query | grep 'color5:'| awk '{print $NF}')
  CYAN=$(xrdb -query | grep 'color6:'| awk '{print $NF}')
  WHITE=$(xrdb -query | grep 'color7:'| awk '{print $NF}')
}

# Only use the function above if the cache of paintee couldn't be found
if [ -e ~/.cache/paintee ]; then
  . ~/.cache/paintee
  else
  getcolors
fi

# Launch rofi with custom configuration
rofi -show drun -sidebar-mode \
-modi run,drun,window \
-hide-scrollbar true \
-bw 2 \
-lines 12 \
-padding 24 \
-width 280 \
-location 0 \
-columns 3 \
-font "Noto Sans 8" \
-color-enabled true \
-color-window "$BACKGROUND,$BLACK,$BACKGROUND" \
-color-normal "$BACKGROUND,$FOREGROUND,$BACKGROUND,$BACKGROUND,$BLUE" \
-color-active "$BACKGROUND,$MAGENTA,$BACKGROUND,$BACKGROUND,$BLUE" \
-color-urgent "$BACKGROUND,$YELLOW,$BACKGROUND,$BACKGROUND,$BLUE"
#+end_src

** mpv

Media player configuration. =mpv= replaces =mplayer=.

#+begin_src conf :tangle ~/.config/mpv/mpv.conf :mkdirp yes
##################
# video settings #
##################
# Start in fullscreen mode by default.
fs=no
# force starting with centered window
geometry=50%:50%
# Do not close the window on exit.
keep-open=yes
# Do not wait with showing the video window until it has loaded. (This will
# resize the window once video is loaded. Also always shows a window with
# audio.)
force-window=immediate
# Disable the On Screen Controller (OSC).
osc=no
# Keep the player window on top of all other windows.
ontop=yes
# Specify high quality video rendering preset (for --vo=gpu only)
# Can cause performance problems with some drivers and GPUs.
profile=gpu-hq
# Enable hardware decoding if available. Often, this does not work with all
# video outputs, but should work well with default settings on most systems.
# If performance or energy usage is an issue, forcing the vdpau or vaapi VOs
# may or may not help.
hwdec=auto
##################
# audio settings #
##################
# Specify default audio device. You can list devices with: --audio-device=help
# The option takes the device string (the stuff between the '...').
audio-device=alsa/default
# Do not filter audio to keep pitch when changing playback speed.
audio-pitch-correction=no
# Output 5.1 audio natively, and upmix/downmix audio with a different format.
audio-channels=5.1
# Disable any automatic remix, _if_ the audio output accepts the audio format.
# of the currently played file. See caveats mentioned in the manpage.
# (The default is "auto-safe", see manpage.)
audio-channels=auto
##################
# other settings #
##################
# Pretend to be a web browser. Might fix playback with some streaming sites,
# but also will break with shoutcast streams.
user-agent="Mozilla/5.0"
#+end_src

** mpd

Music player daemon configuration.

#+begin_src conf :tangle ~/.config/mpd/mpd.conf :mkdirp yes
# Read the user manual for documentation: http://www.musicpd.org/doc/user/
# Files and directories #######################################################
music_directory  "~/Audio/Music"
playlist_directory  "~/.config/mpd/playlists"
db_file   "~/.config/mpd/database"
log_file   "syslog"
pid_file   "~/.config/mpd/pid"
state_file   "~/.config/mpd/state"
sticker_file   "~/.config/mpd/sticker.sql"
###############################################################################
# General music daemon options ################################################
#user    "nobody"
#group    "nogroup"
bind_to_address  "0.0.0.0"
#bind_to_address  "~/.mpd/socket"
#port    "6600"
#log_level   "notice"
#restore_paused "no"
#save_absolute_paths_in_playlists "no"
#metadata_to_use "artist,album,title,track,name,genre,date,composer,performer,disc"
#metadata_to_use "+comment"
auto_update "yes"
auto_update_depth "3"
###############################################################################
# Symbolic link behavior ######################################################
follow_outside_symlinks "yes"
follow_inside_symlinks  "yes"
###############################################################################
# Zeroconf / Avahi Service Discovery ##########################################
#zeroconf_enabled  "yes"
#zeroconf_name   "Music Player @ %h"
###############################################################################
# Permissions #################################################################
#password                        "password@read,add,control,admin"
#default_permissions             "read,add,control,admin"
###############################################################################
# Database #######################################################################
#database {
#       plugin "proxy"
#       host "other.mpd.host"
#       port "6600"
#}
# Input #######################################################################
input {
        plugin "curl"
#       proxy "proxy.isp.com:8080"
#       proxy_user "user"
#       proxy_password "password"
}
###############################################################################
# Audio Output ################################################################
#audio_output {
## type  "alsa"
## name  "My ALSA Device"
## device  "hw:0,0" # optional
## mixer_type      "hardware" # optional
## mixer_device "default" # optional
## mixer_control "PCM"  # optional
## mixer_index "0"  # optional
#}
###############################################################################
# Normalization automatic volume adjustments ##################################
#replaygain   "album"
#replaygain_preamp  "0"
#replaygain_missing_preamp "0"
#replaygain_limit  "yes"
#volume_normalization  "no"
###############################################################################
# Character Encoding ##########################################################
#filesystem_charset  "UTF-8"
###############################################################################
# Visualization
# audio_output {
#   type  "fifo"
#   name  "Visualizer feed"
#   path "/tmp/mpd.fifo"
#   format "44100:16:2"
# }
#+end_src

#+begin_src sh :noweb-ref mpd-post-tangle
mkdir -p ~/.config/mpd/playlists
#+end_src

** ncmpcpp

#+begin_src conf :tangle ~/.config/ncmpcpp/config :mkdirp yes
mpd_host = 127.0.0.1
mpd_port = 6600

browser_sort_mode = name
browser_sort_format = {%A - }{%t}|{%f} {(%l)}
song_columns_list_format = (6f)[green]{NE} (30)[]{a} (30)[white]{t} (30)[cyan]{b} (7f)[magenta]{l}

playlist_show_remaining_time = yes
playlist_shorten_total_times = yes
playlist_separate_albums = yes

browser_display_mode = columns
search_engine_display_mode = columns
playlist_editor_display_mode = columns

autocenter_mode = yes
centered_cursor = yes

default_place_to_search_in = database
user_interface = alternative

media_library_primary_tag = album_artist
cyclic_scrolling = yes

allow_for_physical_item_deletion = no

startup_screen = "playlist"
startup_slave_screen = "playlist"

locked_screen_width_part = 20
ask_for_locked_screen_width_part = no

clock_display_seconds = yes
display_volume_level = yes
display_bitrate = yes
display_remaining_time = yes

ignore_leading_the = yes
media_library_sort_by_mtime = no

enable_window_title = yes

external_editor = vim
use_console_editor = yes
# execute_on_song_change = "~/.config/ncmpcpp/art.sh"
#+end_src

** RSS
#+begin_src emacs-lisp
(use-package elfeed
  :config
  (setq elfeed-feeds
    '(
      ;; programming
      ;; ("https://news.ycombinator.com/rss" hacker)
      ;; programming languages
      ;; ("https://www.reddit.com/r/golang.rss" golang)
      ;; cloud
      ;; ("https://www.reddit.com/r/aws.rss" aws)
  ))
  (setq-default elfeed-search-filter "@2-days-ago +unread")
  (setq-default elfeed-search-title-max-width 100)
  (setq-default elfeed-search-title-min-width 100))
#+end_src
** Mail

Mail on most systems is handled primarily via =mu4e= which is configured in my =Emacs.org= file.

*** Mbsync

=Mbsync= handles synchronization of IMAP inboxes.

#+begin_src conf :tangle ~/.mbsyncrc

# Global Channel configuration.
Create Both
Expunge Slave
Remove None
Sync All
SyncState *
CopyArrivalDate yes

#####################
# Work Email        #
#####################
IMAPAccount work
Host imap.gmail.com
User carwin@mobomo.com
PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.password-store/mbsync/mobomomail.gpg"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt

IMAPStore work-remote
Account work

MaildirStore work-local
# Subfolders Verbatim
Path ~/Mail/Work/
Inbox ~/Mail/Work/inbox

Channel work-inbox
Master :work-remote:
Slave :work-local:inbox

Channel work-archive
Master :work-remote:"[Gmail]/All Mail"
Slave :work-local:archive

Channel work-sent
Master :work-remote:"[Gmail]/Sent Mail"
Slave :work-local:sent

Channel work-trash
Master :work-remote:"[Gmail]/Trash"
Slave :work-local:trash
Create Slave

# Get all the work channels together into a group.
Group work
Channel work-inbox
Channel work-archive
Channel work-sent
Channel work-trash

##########################
# Home Email             #
##########################
IMAPAccount home
Host mail.runbox.com
Port 993
User narwic@1000needles.net
PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.password-store/mbsync/personalmail.gpg"
SSLType IMAPS
SSLVersions TLSv1.2
CertificateFile /etc/ssl/certs/ca-certificates.crt

IMAPStore home-remote
Account home

MaildirStore home-local
Path ~/Mail/Home/
Inbox ~/Mail/Home/inbox/

Channel home-inbox
Master :home-remote:
Slave :home-local:inbox
Create Slave

Channel home-sent
Master :home-remote:"Sent"
Slave :home-local:sent
Create Slave

Channel home-archive
Master :home-remote:"Archives"
Slave :home-local:archive
Create Slave

Channel home-quarantine
Master :home-remote:"Quarantine"
Slave :home-local:quarantine
Create Slave

Channel home-trash
Master :home-remote:"Trash"
Slave :home-local:trash
Create Slave

Channel home-drafts
Master :home-remote:"Drafts"
Slave :home-local:drafts
Create Slave

Group home
Channel home-inbox
Channel home-archive
Channel home-sent
Channel home-trash
Channel home-quarantine
Channel home-drafts

#+end_src

*** msmtp config

=msmtp= is used by mu4e for sending mail instead of the basic smtp process. This is preferred because we have different contexts and emails from which we want to send mail and =msmtp= makes that much easier. See the sister configuration in Emacs.org.

#+begin_src sh :tangle ~/.msmtprc :tangle-mode (identity #o600)
defaults
tls on
tls_trust_file /etc/ssl/certs/ca-certificates.crt
logfile ~/.local/log/msmtp.log

# Home
account Home
auth on
host mail.runbox.com
port 587
from cy@carw.in
user narwic@1000needles.net
passwordeval "gpg2 -q --for-your-eyes-only --no-tty -d ~/.password-store/mbsync/personalmail.gpg"

# Work
account Work
auth on
host smtp.gmail.com
port 587
from carwin@mobomo.com
user carwin@mobomo.com
passwordeval "gpg2 -q --for-your-eyes-only --no-tty -d ~/.password-store/mbsync/mobomomail.gpg"

# account default : home
#+end_src

** vim

=Vim= configuration. Ol' trusty.

#+begin_src conf :tangle ~/.vimrc
" Plugin Management
" ------------------------------------------------------------------------------
" Check for a plugin manager, and if it doesn't exist, go get it.
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'
Plug 'plasticboy/vim-markdown'
Plug 'pangloss/vim-javascript'
Plug 'cakebaker/scss-syntax.vim'
Plug 'evidens/vim-twig'
Plug 'morhetz/gruvbox', { 'as': 'gruvbox' }

" call these on-demand
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }

call plug#end()

" NerdTree plugin configuration
" ------------------------------------------------------------------------------
" Close vim if the only window left open is NERDTree.
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Markdown plugin configurations
" ------------------------------------------------------------------------------
" Disable folding
let g:vim_markdown_folding_disabled = 1

" Lightline plugin configuration
" ------------------------------------------------------------------------------
" Set lightline colorscheme
let g:lightline = {
  \ 'colorscheme': 'seoul256',
  \ }

" Key Mappings
" ------------------------------------------------------------------------------
:let mapleader = ","
" Do escape with kj
inoremap kj <c-c>`^
" Toggle NERDTree
map <C-n> :NERDTreeToggle<CR>
" Fast save a buffer
nmap <leader>ww :w!<cr>
" Fast save and quit buffer
nmap <leader>wq :wq!<cr>
" Fast quit
nmap <leader>q :q!<cr>
" New tab
map <leader>tn :tabnew<cr> " Tab only map <leader>to :tabonly<cr>
" Tab move
map <leader>tm :tabmove<cr>
" Tab next
nnoremap <leader>. :tabnext<CR>
" Tab previous
nnoremap <leader>' :tabprevious<CR>
" Toggle Paste mode (,p)
set pastetoggle=<leader>p
map <leader>p :set invpaste paste?<CR>
" Strip trailing whitespace (,ss)
nnoremap <leader>ss :call StripWhitespace()<CR>
" Toggle background transparency (C-T)
nnoremap <C-T> :call ToggleTransparent()<CR>
" Map <C-L> (redraw screen) to also turn off search highlighting until the next search.
nnoremap <C-L> :nohl<CR><C-L>

" General
" ------------------------------------------------------------------------------
set background=dark
"colorscheme gruvbox
"let g:colors_name='gruvbox'
set t_Co=256
syntax on
set autoindent " When opening a new line and no filetype-specific indenting is enabled, keep same indent.
set backspace=indent,eol,start " Allow backspacing over auto-indents, line breaks, and start of insert action
set colorcolumn=+1 " Highlight the column width border (+1 means highlight line 81 if textwidth is 80).
set confirm " Raise a dialog asking to save changed files.
set cursorline " Highlight the cursor line.
set encoding=utf-8 nobomb " Set encoding without BOM
set expandtab " Expand tabs into spaces.
set foldcolumn=4 " Indicate a fold with 4 columns.
set foldenable " Enable folds.
set foldlevel=2 " Fold / unfold this many.
set foldmethod=syntax " Set the fold method, see :help foldmethod.
set foldminlines=0 " Set a minimum value for closed folds.
set foldnestmax=3 " Set maximum nesting of folds for syntax method.
set history=1000 " Remember this many lines for the five history tables.
set hlsearch " Highlight searches (<C-L> to toggle).
set ignorecase " Use case insensitive search.
set incsearch " Highlight incrementally as search is typed.
set laststatus=2 " Always display the status line.
set magic " Enable extended regexes.
set mouse=a " Enable use of the mouse.
set noerrorbells " Don't make noises when doing bad things.
set nojoinspaces " Only insert single space after a '.', '?', and '!' with a join command.
set nostartofline " Don't reset cursor when moving around.
set notimeout ttimeout ttimeoutlen=200 " Quickly time out on keycodes, but never on mappings.
set nowrap " No visual wrapping.
set number " Display line numbers.
set scrolloff=3 " Keep this many lines above/below the cursor for context.
set shiftwidth=2 " Define columns to use for indenting (>> and <<).
set showcmd " Show partial commands in the last line of the screen.
set showmode " Show the current mode in the last line.
set showtabline=2 " Always display the tabline up top.
set smartcase " Use case sensitive search when using capitals.
set smartindent " Indent new lines intelligently.
set softtabstop=2 " Move the cursor two characters when typing Tab in insert mode.
set suffixes=.bak,.swp,.swo,.info,.aux,.log,.pdf,.bin,.dmg,.exe,.out,.inc,.pyd,.pyc,.dll " Ignore these extensions when completing filenames and encountering multiple matches.
set tabstop=2 " Define how many columns a Tab counts for.
set title " Set the window title to the filename.
set ttyfast " Improve redrawing.
set textwidth=80 " Set the max columns for text before breaking to a new line.
set undofile " Persistent undo.
set wildmenu " Better command-line completion.
set wrapscan " Searches wrap around end of file.

" Highlight redundant whitespace.
highlight RedundantSpaces ctermbg=red guibg=black
match RedundantSpaces /\s\+$\| \+\ze\t\|\t/

" Change the colorcolumn color.
highlight ColorColumn ctermbg=236

" Local directories
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
set undodir=~/.vim/undo

" Syntax
" ------------------------------------------------------------------------------
" HTML
let g:html_indent_tags = 'li\|p' " <li> and <p> tags are block elements

" ZSH
au BufRead,BufNewFile .zsh_rc,.functions,.commonrc set ft=zsh

" Sass
au BufRead,BufNewFile *.scss set filetype=scss.css
autocmd FileType scss set iskeyword+=-

" Make
autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0

" Markdown
au BufRead,BufNewFile *.m*down setlocal filetype=markdown
au BufRead,BufNewFile *.md setlocal textwidth=80
au BufRead,BufNewFile *.md setlocal spell

" Drupal
au BufRead,BufNewFile *.module set filetype=php
au BufRead,BufNewFile *.install set filetype=php
au BufRead,BufNewFile *.test set filetype=php
au BufRead,BufNewFile *.inc set filetype=php
au BufRead,BufNewFile *.profile set filetype=php
au BufRead,BufNewFile *.view set filetype=php
au BufRead,BufNewFile *.theme set filetype=php

" PHP
autocmd FileType php set omnifunc=phpcomplete#CompletePHP

" Functions
" ------------------------------------------------------------------------------
" Strip trailing whitespace
function! StripWhitespace ()
  let save_cursor = getpos('.')
  let old_query = getreg('/')
  :%s/\s\+$//e
  call setpos('.', save_cursor)
  call setreg('/', old_query)
endfunction

" Toggle Transparency
let t:is_transparent = 1
function! ToggleTransparent()
  if t:is_transparent == 0
    hi Normal guibg=NONE ctermbg=NONE
    let t:is_transparent = 1
  else
    hi Normal guibg=#000000 ctermbg=16
    let t:is_transparent = 0
  endif
endfunction
#+end_src

Create =vim= directories.

#+begin_src  sh :noweb-ref vim-post-tangle
mkdir -p ~/.vim/undo
mkdir -p ~/.vim/backups
mkdir -p ~/.vim/swaps
#+end_src


Before this configuration file can be useful some directories and the =vim-plugin= manager needs to be put in the autoload directory.

#+begin_src sh :noweb-ref vim-post-tangle
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
#+end_src

** Firefox

Firefox and dark mode generally place well together, but when transitioning between pages, Firefox likes to flash a horrible full-white page that temporarily blinds anyone who gazes upon it. These tweaks solve that, but need to be generalized.

Before any of these tweaks will work, the setting =toolkit.legacyUserProfileCustomizations.stylesheets = true= must be set in =about:config=.

#+begin_src emacs-lisp
(defun cy/firefox-profile-dir ()
  (concat "~/.mozilla/firefox/" "8zl2ickg.default-release"))
#+end_src
*** userChrome.css

#+begin_src css :tangle ~/.mozilla/firefox/8zl2ickg.default-release/chrome/userChrome.css :mkdirp yes
@-moz-document url(chrome://browser/content/browser.xhtml)
{
  #main-window,
  browser[type="content-primary"],
  browser[type="content"],
  tabbrowser#content,
  #content,
  browser[type="content"] > html
  {
     background: #323234 !important;
  }

}
#+end_src

*** userContent.css

#+begin_src css :tangle ~/.mozilla/firefox/8zl2ickg.default-release/chrome/userContent.css :mkdirp yes
@charset "utf-8";
/* CSS Document */

@-moz-document url("about:newtab") {
body { background-color: #011326 !important;}
}

@-moz-document url(chrome://browser/content/browser.xhtml) {
browser[type="content-primary"] {background: #011326 !important}
}

#+end_src

** Application post-tangle actions.

#+begin_src sh :noweb yes :mkdirp yes :tangle ~/Projects/home/dotfiles/tangled/application-post-tangle.sh :shebang "#!/bin/bash" :tangle-mode (identity #o755)
<<mpd-post-tangle>>
<<qutebrowser-post-tangle>>
<<vim-post-tangle>>
#+end_src

* Systemd

This section is for storing all of my =Systemd= configurations and
timers. Org will tangle these out, but they won't be enabled or run
without intervention or some kind of post-save Emacs hook.

User level =Systemd= configurations live in =~/.config/systemd/user/=

** Random Wallpaper Timer

This systemd service sets a random desktop wallpaper fifteen minutes
after boot (when enabled) or whenever run.

#+begin_src shell :tangle ~/.config/systemd/user/wallpaper-changer.service
[Unit]
Description=Choose a random desktop wallpaper

[Service]
ExecStart=feh --bg-fill --randomize --recursive /home/narwic/Pictures/Wallpaper/big

[Install]
WantedBy=default.target
#+end_src

This systemd timer can be enabled to automatically change the random
wallpaper at a given interval.

#+begin_src shell :tangle ~/.config/systemd/user/wallpaper-changer.timer
#/etc/systemd/system/foo.timer
[Unit]
Description=Change the desktop wallpaper periodically

[Timer]
OnBootSec=15min
OnUnitActiveSec=15min

[Install]
WantedBy=timers.target

#+end_src

** Emacs

Emacs ships with a systemd unit (at least in Arch), so there's really
not much to tangle out. On a fresh system, one need simply enable the
service and start it.

#+begin_src sh :noweb-ref emacs-post-tangle
# systemctl --user enable --now emacs
# systemctl --user start emacs
#+end_src

** Post-tangle

#+begin_src sh :noweb yes :mkdirp yes :tangle ~/Projects/home/dotfiles/tangled/systemd-post-tangle.sh :shebang "#!/bin/bash" :tangle-mode (identity #o755)
<<emacs-post-tangle>>
#+end_src

* Other

I don't rightly remember what I added this for, but I think it has something to do with	Ethereum development.

#+begin_src conf :tangle ~/.soliumrc.json
{
  "extends": "solium:recommended"
  "plugins": ["security"],
  "rules": {
    "quotes": ["error", "double"],
    "indentation": ["error", 4],
    "linebreak-style": ["error", "unix"]
  }
}
#+end_src
