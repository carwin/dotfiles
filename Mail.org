#+title: Mail Configuration
#+author: Carwin Young
#+property: header-args:emacs-lisp :tangle (concat user-emacs-directory "cy-mail.el") :mkdirp yes

| =mu4e=         | System |
| =mu4e-contrib= | System |
| =msmtp=        | System |

Configure =mu4e=, my favorite email client.

The =mu4e= package ships with the system package =mu= on Arch Linux systems. This is likely the same for other *nix systems as well. Typically, Emacs has no context for where the necessary =mu4e= files reside.

Firstly, ensure that Emacs knows about the location on the system of the =mu4e= directory and its related ~.el~ files.

#+begin_src emacs-lisp
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp/mu4e")
#+end_src

Locate Email signature files for different accounts.

#+begin_src emacs-lisp
(defun cy/work-sig ()
  "Provides the path to	email signature for work mail."
  (shell-command-to-string "cat ~/Mail/Work/signature.sig"))
(defun cy/home-sig ()
  "Provides the path to email signature for personal mail."
  (shell-command-to-string "cat ~/Mail/Home/signature.sig"))
#+end_src

Configure basic =mu4e= functionality. Define the mailboxes and set =mu4= to refreshe the defined mailboxes every 10 minutes
and set the composition window to open in a new frame.

#+begin_src emacs-lisp
(use-package mu4e
  :ensure nil
  :ensure-system-package mu
  :config
  ;; This is set to 't' to avoid mail syncing issues when using mbsync
  (setq mu4e-change-filenames-when-moving t
        ;; Refresh mail using isync every 10 minutes
        mu4e-update-interval (* 15 60)
        mu4e-compose-in-new-frame nil
        mu4e-view-show-images t
	mu4e-split-view 'vertical
        mu4e-get-mail-command "mbsync -a"
        mu4e-maildir "~/Mail")
  (setq mu4e-contexts
	(list
	 ;; Personal account
	 (make-mu4e-context
          :name "Personal"
          :match-func
          (lambda (msg)
            (when msg
              (string-prefix-p "/Home" (mu4e-message-field msg :maildir))))
          :vars '((user-mail-address . "cy@carw.in")
                  (user-full-name    . "Carwin Young")
                  (mu4e-compose-signature . cy/home-sig)
                  (mu4e-drafts-folder  . "/Home/drafts")
                  (mu4e-sent-folder    . "/Home/sent")
                  (mu4e-refile-folder  . "/Home/archive")
                  (mu4e-trash-folder   . "/Home/trash")
                  (mu4e-maildir-shortcuts .  (("/Home/inbox"         . ?i)
                                              ("/Home/sent"          . ?s)
                                              ("/Home/quarantine"    . ?q)
                                              ("/Home/trash"         . ?t)
                                              ("/Home/drafts"        . ?d)
                                              ("/Home/archive"       . ?a)))))
         ;; Work account
	 (make-mu4e-context
          :name "Work"
          :match-func
          (lambda (msg)
            (when msg
              (string-prefix-p "/Work" (mu4e-message-field msg :maildir))))
          :vars '((user-mail-address . "carwin@mobomo.com")
                  (user-full-name    . "Carwin Young")
                  (mu4e-compose-signature . cy/work-sig)
                  (mu4e-drafts-folder  . "/Work/drafts")
                  (mu4e-sent-folder    . "/Work/sent")
                  (mu4e-refile-folder  . "/Work/archive")
                  (mu4e-trash-folder   . "/Work/trash")
                  (mu4e-maildir-shortcuts . (("/Work/inbox"     . ?i)
                                             ("/Work/sent"     . ?s)
                                             ("/Work/trash"    . ?t)
                                             ("/Work/drafts"   . ?d)
                                             ("/Work/archive"  . ?a))))))))


#+end_src

Define a function to assist in capturing todo items from Emails.

#+begin_src emacs-lisp
(defun cy/org-capture-mail ()
  (interactive)
  (call-interactively 'org-store-link)
  (org-capture nil "m"))

#+end_src

Assign a keybinding based off the =<leader>= key defined in =./Emacs.org= for capturing from todos within the =mu4e-headers= mode.

@todo, this doesn't work - but keep the documentation.

#+begin_src emacs-lisp
(cy/leader-key-def
  :keymaps 'mu4e-headers
  "i" '(cy/org-capture-mail :which-key "capture mail"))

#+end_src


#+begin_src emacs-lisp
(require 'mu4e-contrib)
(setq mu4e-html2text-command 'mu4e-shr2text)
(add-to-list 'mu4e-view-actions '("ViewInBrowser" . mu4e-action-view-in-browser) t)

(setq mu4e-view-html-plaintext-ratio-heuristic most-positive-fixnum)
(add-hook 'mu4e-compose-mode-hook 'flyspell-mode)
(setq mu4e-compose-format-flowed t)
(setq fill-flowed-encode-column 998)

(setq mail-user-agent 'message-user-agent)
#+end_src

Send mail using =msmtp=.

#+begin_src emacs-lisp
(setq sendmail-program "/usr/bin/msmtp"
      message-sendmail-f-is-evil t
      message-sendmail-extra-arguments '("--read-envelope-from")
      send-mail-function 'smtpmail-send-it
      message-send-mail-function 'message-send-mail-with-sendmail)
#+end_src

Configure calendar invite response functionality.

Extend the main page to show details about individual mail directories with =mu4e-maildirs-extension=.

#+begin_src emacs-lisp
(use-package mu4e-maildirs-extension
  :init (mu4e-maildirs-extension))
#+end_src

Provide ='cy-mail= so it can be required in =./Emacs.org=

#+begin_src emacs-lisp
(provide 'cy-mail)
#+end_src
