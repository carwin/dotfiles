#+title: Mail Configuration
#+author: Carwin Young
#+property: header-args:emacs-lisp :tangle (concat user-emacs-directory "cy-mail.el") :mkdirp yes

* mu4e

| =mu4e=                    | System |
| =mu4e-contrib=            | System |
| =msmtp=                   | System |
| =mu4e-maildirs-extension= | @todo  |

Configure =mu4e=, my favorite email client.

The =mu4e= package ships with the system package =mu= on Arch Linux
systems. This is likely the same for other *nix systems as
well. Typically, Emacs has no context for where the necessary =mu4e=
files reside.

Firstly, ensure that Emacs knows about the location on the system of
the =mu4e= directory and its related ~.el~ files.

#+begin_src emacs-lisp
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp/mu4e")
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp/mu/mu4e")
(add-to-list 'load-path "/usr/share/emacs/site-lisp/mu4e")
#+end_src

Locate Email signature files for different accounts.

#+begin_src emacs-lisp
(defun cy/work-sig ()
  "Provides the path to email signature for work mail."
  (shell-command-to-string "cat ~/Mail/Work/signature.sig"))
(defun cy/home-sig ()
  "Provides the path to email signature for personal mail."
  (shell-command-to-string "cat ~/Mail/Home/signature.sig"))
#+end_src

Configure basic =mu4e= functionality. Define the mailboxes and set =mu4=
to refreshe the defined mailboxes every 10 minutes and set the
composition window to open in a new frame.

#+begin_src emacs-lisp :noweb yes
(use-package mu4e
  :ensure nil
  :config
  ;; mbsync's binary could be located in various places:
  (setq mu4e-mu-binary (shell-command-to-string "printf %s \"$(which mu)\""))
  ;; This is set to 't' to avoid mail syncing issues when using mbsync
  (setq mu4e-change-filenames-when-moving t
        ;; Refresh mail using isync every 10 minutes
        mu4e-update-interval (* 15 60)
        mu4e-compose-in-new-frame nil
        mu4e-view-show-images t
        mu4e-split-view 'vertical
        mu4e-get-mail-command "mbsync -a"
        mu4e-maildir "~/Mail")
  ;; use imagemagick, if available
  (when (fboundp 'imagemagick-register-types)
    (imagemagick-register-types))
  (setq mu4e-contexts
        (list
         ;; Personal account
         (make-mu4e-context
          :name "Personal"
          :match-func
          (lambda (msg)
            (when msg
              (string-prefix-p "/Home" (mu4e-message-field msg :maildir))))
          :vars '((user-mail-address . "cy@carw.in")
                  (user-full-name    . "Carwin Young")
                  (mu4e-compose-signature . cy/home-sig)
                  (mu4e-drafts-folder  . "/Home/drafts")
                  (mu4e-sent-folder    . "/Home/sent")
                  (mu4e-refile-folder  . "/Home/archive")
                  (mu4e-trash-folder   . "/Home/trash")
                  (mu4e-maildir-shortcuts .  (("/Home/inbox"         . ?i)
                                              ("/Home/sent"          . ?s)
                                              ("/Home/quarantine"    . ?q)
                                              ("/Home/trash"         . ?t)
                                              ("/Home/drafts"        . ?d)
                                              ("/Home/archive"       . ?a))))))))
#+end_src

Define a function to assist in capturing todo items from Emails.

#+begin_src emacs-lisp
(defun cy/org-capture-mail ()
  (interactive)
  (call-interactively 'org-store-link)
  (org-capture nil "m"))
#+end_src

Assign a keybinding based off the =<leader>= key defined in =./Emacs.org=
for capturing from todos within the =mu4e-headers= mode.

@todo, this doesn't work - but keep the documentation.

#+begin_src emacs-lisp
(cy/leader-key-def
  :keymaps 'mu4e-headers
  "i" '(cy/org-capture-mail :which-key "capture mail"))

#+end_src

#+begin_src emacs-lisp
(require 'mu4e-contrib)
(setq mu4e-html2text-command 'mu4e-shr2text)
(add-to-list 'mu4e-view-actions '("ViewInBrowser" . mu4e-action-view-in-browser) t)

(setq mu4e-view-html-plaintext-ratio-heuristic most-positive-fixnum)
(add-hook 'mu4e-compose-mode-hook 'flyspell-mode)
(setq mu4e-compose-format-flowed t)
(setq fill-flowed-encode-column 998)

(setq mail-user-agent 'message-user-agent)
#+end_src

Send mail using =msmtp=.

#+begin_src emacs-lisp
(setq sendmail-program "/usr/bin/msmtp"
      message-sendmail-f-is-evil t
      message-sendmail-extra-arguments '("--read-envelope-from")
      send-mail-function 'smtpmail-send-it
      message-send-mail-function 'message-send-mail-with-sendmail)
#+end_src

Configure calendar invite response functionality.

Extend the main page to show details about individual mail directories
with =mu4e-maildirs-extension=.

#+begin_src emacs-lisp
(use-package mu4e-maildirs-extension
  :init (mu4e-maildirs-extension))
#+end_src

Provide ='cy-mail= so it can be required in =./Emacs.org=

#+begin_src emacs-lisp
(provide 'cy-mail)
#+end_src

* System =mbsync= / =isync= configuration

=Mbsync= handles synchronization of IMAP inboxes. The entirety of its
configuration is handled by a single file that gets spit out to
~$HOME/.mbsyncrc~.

The gaps surrounding some of these code blocks are important, the
=mbsync= command will fail to read the configuration without them.

#+begin_src conf :noweb yes :tangle ~/.mbsyncrc
<<mbsyncrc>>
#+end_src

Global channel configuration.

#+begin_src conf :noweb-ref mbsyncrc
# Global Channel configuration.
Create Both
Expunge Slave
Remove None
Sync All
SyncState *
CopyArrivalDate yes

#+end_src

Configuration for personal emails.

#+begin_src conf :noweb-ref mbsyncrc
##########################
# Home Email             #
##########################
IMAPAccount home
Host mail.runbox.com
Port 993
User narwic@1000needles.net
PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.password-store/mbsync/personalmail.gpg"
SSLType IMAPS
SSLVersions TLSv1.2
#+end_src

The certificate file changes based on whether the ~system-type~ is Linux
or Darwin. First, define a named code block that can be called as a
noweb reference.

#+name: mail-cert-location
#+begin_src emacs-lisp
(if (eq system-type 'gnu/linux)
    "CertificateFile /etc/ssl/certs/ca-certificates.crt"
    "CertificateFile /usr/local/etc/openssl@1.1/cert.pem")
#+end_src

Now, use the output of the previously named elisp block to output the
certificate location.

#+begin_src conf :noweb yes :noweb-ref mbsyncrc
<<mail-cert-location()>>
#+end_src

Give a name to the account and the IMAP store.

#+begin_src conf :noweb-ref mbsyncrc

IMAPStore home-remote
Account home

#+end_src

Configure the mail folders to pull in and their local directories.

#+begin_src conf :noweb-ref mbsyncrc
MaildirStore home-local
Path ~/Mail/Home/
Inbox ~/Mail/Home/inbox/

Channel home-inbox
Master :home-remote:
Slave :home-local:inbox
Create Slave

Channel home-sent
Master :home-remote:"Sent"
Slave :home-local:sent
Create Slave

Channel home-archive
Master :home-remote:"Archives"
Slave :home-local:archive
Create Slave

Channel home-quarantine
Master :home-remote:"Quarantine"
Slave :home-local:quarantine
Create Slave

Channel home-trash
Master :home-remote:"Trash"
Slave :home-local:trash
Create Slave

Channel home-drafts
Master :home-remote:"Drafts"
Slave :home-local:drafts
Create Slave

Group home
Channel home-inbox
Channel home-archive
Channel home-sent
Channel home-trash
Channel home-quarantine
Channel home-drafts
#+end_src

* System =msmtp= Configuration

=msmtp= is used by =mu4e= for sending mail instead of the basic smtp
process. This is preferred because we have different contexts and
emails from which we want to send mail and =msmtp= makes that much
easier.

#+begin_src sh :tangle ~/.msmtprc
defaults
tls on
# tls_trust_file /etc/ssl/certs/ca-certificates.crt
tls_trust_file /usr/local/etc/openssl@1.1/cert.pem
logfile ~/.local/log/msmtp.log

# Home
account Home
auth on
host mail.runbox.com
port 587
from cy@carw.in
user narwic@1000needles.net
passwordeval "gpg -q --for-your-eyes-only --no-tty -d ~/.password-store/mbsync/personalmail.gpg"
#+end_src
